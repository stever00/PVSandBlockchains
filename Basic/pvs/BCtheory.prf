(BCtheory
 (add_account_1 0
  (add_account_1-1 nil 3746397049 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (Gas type-eq-decl nil types_and_constants nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (singfs const-decl "finseq[T]" types_and_constants nil)
    (restrict const-decl "R" restrict nil)
    (O const-decl "finseq" finite_sequences nil)
    (add_account const-decl "Maybe[BCstatetype]" BCtheory nil))
   shostak))
 (delete_acc_1 0
  (delete_acc_1-1 nil 3746743107 ("" (grind) nil nil)
   ((empty_seq const-decl "finseq" finite_sequences nil)
    (finseq2list const-decl "list[T]" list2finseq nil)
    (list2finseq const-decl "finseq[T]" list2finseq nil)
    (delete_account const-decl "Maybe[BCstatetype]" BCtheory nil))
   shostak))
 (delete_acc_2 0
  (delete_acc_2-1 nil 3746396717
   ("" (grind) (("1" (postpone) nil nil) ("2" (postpone) nil nil)) nil)
   nil shostak))
 (transition_TCC1 0
  (transition_TCC1-1 nil 3746138611 ("" (grind) nil nil)
   ((nonneg_int nonempty-type-eq-decl nil integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (Cash type-eq-decl nil types_and_constants nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (empty_seq const-decl "finseq" finite_sequences nil))
   nil))
 (transition_1 0
  (transition_1-1 nil 3746473089 ("" (grind) nil nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (transition const-decl "Maybe[BCstatetype]" BCtheory nil))
   shostak))
 (c_change_TCC1 0
  (c_change_TCC1-1 nil 3746396482 ("" (grind) nil nil) nil nil)))

